action_space: !!python/object:gym.spaces.box.Box
  _np_random: null
  _shape: !!python/tuple
  - 56
  bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - &id001 !!python/name:numpy.ndarray ''
    - !!python/tuple
      - 0
    - !!binary |
      Yg==
    state: !!python/tuple
    - 1
    - !!python/tuple
      - 56
    - &id002 !!python/object/apply:numpy.dtype
      args:
      - b1
      - false
      - true
      state: !!python/tuple
      - 3
      - '|'
      - null
      - null
      - null
      - -1
      - -1
      - 0
    - false
    - !!binary |
      AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE=
  bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple
      - 0
    - !!binary |
      Yg==
    state: !!python/tuple
    - 1
    - !!python/tuple
      - 56
    - *id002
    - false
    - !!binary |
      AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE=
  dtype: &id007 !!python/object/apply:numpy.dtype
    args:
    - f4
    - false
    - true
    state: !!python/tuple
    - 3
    - <
    - null
    - null
    - null
    - -1
    - -1
    - 0
  high: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple
      - 0
    - !!binary |
      Yg==
    state: !!python/tuple
    - 1
    - !!python/tuple
      - 56
    - &id003 !!python/object/apply:numpy.dtype
      args:
      - f4
      - false
      - true
      state: !!python/tuple
      - 3
      - <
      - null
      - null
      - null
      - -1
      - -1
      - 0
    - false
    - !!binary |
      AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8A
      AIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAA
      gD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACA
      PwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8=
  low: !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple
      - 0
    - !!binary |
      Yg==
    state: !!python/tuple
    - 1
    - !!python/tuple
      - 56
    - *id003
    - false
    - !!binary |
      AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8A
      AIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAA
      gL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACA
      vwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8=
activation_fn: torch.nn.Tanh
features_extractor_class: !!python/name:mocapact.sb3.features_extractor.CmuHumanoidFeaturesExtractor ''
features_extractor_kwargs:
  obs_rms:
    walker/actuator_activation: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: &id005 !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple []
        - &id008 !!python/object/apply:numpy.dtype
          args:
          - i8
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - -1
          - -1
          - 0
        - false
        - !!binary |
          kaoIBAAAAAA=
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 56
        - &id004 !!python/object/apply:numpy.dtype
          args:
          - f8
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - -1
          - -1
          - 0
        - false
        - !!binary |
          ysNdsXbZsT9h7SYCZCG4v5RuYTKZBcI/s6A6r2gc0D9csVSnmG3Yv0oT5tIeV+I/Nckc5W7xmL9N
          2LzW1Y3WvyuYYVuwPuu//XxuJq3lxr811NtjyA7kP+uT5d5xVMK/erczhnoNyD/P7n0G4nzhv/mJ
          ENf5H4e/2xnvFlir6j+kpQKAagDVv2CZKJmqSoc/SycElPM1sb+mTLhHImrov+R8B1uKq7a/QGae
          5gypzL93IRE/LMjTv0eHp2qn8ei/VAMM44zJ4z95ktGG9iLlv/Uf2skShOM/qMXfCWdb6r9fWNrI
          6czHvzleodXGo9Q/6nL8H3E/4j9J3NwjE12EPzPF2E1XU9c/CcqX6JFV679S5iUENC+8vybejdJf
          nOe/7IU0Agxcw7/4ujpVpZORP3Uw6TnvqOC/wDdhLatTor9iHu5vYhLtv+py+lGiYNO/HBAk+aAG
          6b+5u5HkKXvfv2uAV8ThY+S/weX3883I5j+mbS9C5eHrP+PHBBckGeO/XpSAKVM5rz8dYTw5Fhai
          PzGHJvbO0OC/FlWGgOdkxz/ia3MSyjy1P732ZotM+dQ/S76SXBNKuL/Pc3OaXXHBPw==
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 56
        - *id004
        - false
        - !!binary |
          TJ5sqBb00z+LG6rEU+PSPxSOs5oVvdA/FEgwCSWd1T8ELUutPYPOP2DS6L1sgK0/ctdlbBVRpT/g
          TaarW/uuP8ApfiBqx5g/eq8gTKg6yz8Uylk8PXu7PwVwB+ZNCak/ONaT5R/s2T/QvHD0QgHIPzNL
          fFZTRbM/OLHVByV/tj9mQrdHpAW+PzDYjSyLdcU/bPGZfegyxT+Yeon7qN+4Pya4HD4v4Ms/SyE4
          DmhuyD8oXJdmEnrAP0i/EPV5MLM/0VPJG7JL0z9g6aZANS21PwAqIWGNXbg/kIX7zEhAuz8z5S3g
          k0fWP/vUbQq6ItA/uLvDOdHwrj825VVteommP4BBFH52ErA/IOTxcOn2mD+P0bpO6ODNPyBpj6sO
          NLY/jAIlaP3mrj+y69zx0y3ZP1wTcdlfCcs/aDJ2d5imsz8QXlxvyiWqP9yGiRNJQcA/kJZLxqet
          tT/QpkDIqonSP5QnRIV0EbY/CDkMZk5ztj/YDoTcAF2xP6wecr+V5bA/KhBEQk/n0D+XQBIDeXTC
          P5SMw5dADbA/6JcuNl/R0z8oWN11f6fHP2CjVONbJdo/1M9SQonr1j/WYexru03VPw==
    walker/appendages_pos: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 15
        - *id004
        - false
        - !!binary |
          qLFXlcsy1r/FWERr4qnPPzKhMVzxCK8/awp5nH2X0j9UQel8h07OP4rOvZ3eSKc//ZjgEc6Cwb8s
          GoM3Ytfvv8cWO+7yZqg/kqxfNrZ3wj87IRQvvAXwv92lCubuaaw/fxtpICHmYT/qxvLv/7/kP8oP
          v59JeK8/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 15
        - *id004
        - false
        - !!binary |
          gJJUMvzXeD8okXw1oMOOPy1jdf2ufpc/sM2pU0Tfej9QtFyeKz+HP4axSY+HU5M/GkVq/eUNjz/A
          O1H9npWCP75Mp4qiRKU/UlpeBUCCij+AQ9lpYm+BP+bw8im+GKU/LbHv/laacT8AOSgWdgBRPwWh
          q8GYAZA/
    walker/body_height: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          Kr+tTZRM8T8=
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          ADc1wSprdT8=
    walker/end_effectors_pos: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 12
        - *id004
        - false
        - !!binary |
          qLFXlcsy1r/FWERr4qnPPzKhMVzxCK8/awp5nH2X0j9UQel8h07OP4rOvZ3eSKc//ZjgEc6Cwb8s
          GoM3Ytfvv8cWO+7yZqg/kqxfNrZ3wj87IRQvvAXwv92lCubuaaw/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 12
        - *id004
        - false
        - !!binary |
          gJJUMvzXeD8okXw1oMOOPy1jdf2ufpc/sM2pU0Tfej9QtFyeKz+HP4axSY+HU5M/GkVq/eUNjz/A
          O1H9npWCP75Mp4qiRKU/UlpeBUCCij+AQ9lpYm+BP+bw8im+GKU/
    walker/gyro_anticlockwise_spin: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          54P1P7fyb78=
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          pBoTEKit4T8=
    walker/gyro_backward_roll: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          VQRIH+dolb8=
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          gseBTJK99T8=
    walker/gyro_control: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          DGuSaNQs/L7j/+3CsDupP5ve7+6Urmu/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          xSUePfiZ4j+ueSXikNv3P2ZJ+9cYCdg/
    walker/gyro_rightward_roll: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          Su8DbfFdqT8=
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          4vPmyS/u+z8=
    walker/head_height: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          7G++nYN3+z8=
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          gAfVnP9TkD8=
    walker/joints_pos: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 56
        - *id004
        - false
        - !!binary |
          e0Owl+9vwD8IkwZoMJWWv8PFDg5FMqE/rcUMazASgr/VP0xRNFl5PwSxpcT5OtS/ISFc8iD5kr9b
          RcZuSsnUv1ub694/DLw/rtMi+Fcn2b/19bqdKaynP7tkhMcrl8u/K8etMiHFxD/u75VRZfravzBJ
          aNrUGp+/TjwZtmHQ8z9rAb2cZM2/P9KdzDSWY3E/gJLrade8i79N+LibNhzAv+A/0E/BNKC/0gi1
          BXchtb/c/uwh4nLsP+eCJf0+ecs/ceJ7TQfX2z/a7VPtefnjP/yG97u73ba/BII+fHyD0D+RCC0W
          P3KQP32VkdG872i/opeQs2l01L8Yx9cRIu9kP/bG9FjpLNU/GBVVyHl1uz9i2jL1EVTYv77cZH+1
          RL+/vxcSKQMUzb+J3FITJ4F9v7vwCPp+Utm/zEauLVOOrL962iTHwKLtv9R6fjayxew/vHPEHzPg
          xz/4DSWPQH/Wv4cSi7djt+Q/E45kdayrhT/qNSP0ldnHv/54oh4vXLG/S+EuH+1ugj+LjLZfFMWP
          P5JQVgOyYWs/eKks1Kc6nD9oEnZzmOmbP7AOLOF+bdA/DWcwFB3tm7/ABCHJM5KkPw==
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 56
        - *id004
        - false
        - !!binary |
          MCv+x0Skjz91HafIBQWOP4NhfgtP2Yo/Ddg9qRVAXj96lw2g0/wzP0sw2sv7K7k/peFqyLZ5oD9A
          8UgyXWSSP7Ccb4Yn7XQ/4J5zO/DVoz81XuQLAbajP1wgNTX/0LA/HltXSU+pxz8g+zv/jbjOP1Z+
          gZFBMr8/0I1JJychvD+JVvUR2c2dPyikKf6UioA/7U5oQZf2gT/80jUF6ASJP/9oFj2aSZY/ijBT
          ran9lD9U5WzrzJrQP+j1RhT/A5o/QdUW3V7twj9c6siuNYW/PxNpeJ6r0qo/LJBNywe3yz/F1WEW
          S2BeP8Zfm80tXTE/qUihFKdruj8TvHdLkS+iP1Dm1unGVpU/5B3tsNYBdj8cPAlJY9mlP882Lf1F
          y58/agzAmAE7tz/0+rwB263HP1nftQcKsdE/aZI/ww32wD9wzT2AhESwP8ItR9+vhdA/UEo/FSst
          oj/8tZ2EhgrCP0xUHEABQsE/NB1qTuoVrj84D2f1xb/APxJvRs1adYc/hAqvonRUdj9mwhcVeweB
          P2cIlsZZ54k/icB1CzPaej8Osmqdqz+JP1xsFAw4BaQ/NdJn32KymT9L+Eg3UVuYPw==
    walker/joints_vel: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 56
        - *id004
        - false
        - !!binary |
          /rG76KosUz9liAxBc8tkv4yiRl3rimE/8GOlnXwWeb9wtGdEDXdyP8LkTzbeAKE/+uGo0/uWar/c
          0eNHdDhhv8z0Qdac15i/5ixeIqWOo796yoqMHDt3Pw2cKpfTgly/hE/+xB90bz9u6P/Tr5qBv2gZ
          IBImAYO/e726i+vXiD/JT9DjpQmUP9uuefnP/Em/8tBhJuuJWb+7PD5W1aGJP0a5cuzLQ2O/bZvM
          zZ+GaL/UjY/6K6B+v2+S7/IN746/qsl5Ffz4Vb/v8S4d3wOOv0sEDJJAmp0/zlld1zB1l7/894Cz
          D0p8P/N3VnZUXXS/deUBi21knj8PJdadAdVwP3xXLT4q9Gc/51D0Y/Gamb8lF704nbWiv6fpsT0/
          qGa/8X9E+s1vWb9Z8BbQwmdnP5UDcbEwz4m/zVlXDNX9Zz8PKTYk6jVyv9HOVZinfIS/UZ2Whw8Q
          kr/o+ZXVeuRovxB0o0dJQo2/L1/WpTKpmD+MS0ZNcwqaP1BQp/VYcIe/jxrUTXqEUj/1ExWAIUla
          v0QStYvpg3E/AyluyGAIcz/aWdduxBtxP7ZjcgXtr2u/3kg9HYfrVb8SUB0h9b8dvw==
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 56
        - *id004
        - false
        - !!binary |
          3wxYT9Fi6z81J72Wlo7tP/x6OAjWRew/GuA5DljUyD9Hw1azDn7APy1k2aFciQ9AEwnwfK+sCkAs
          AMe3C+HxP8aa5IgWWPc/bM2x54H8EkDEzezplDUGQPlF0N5kQRhABmui/NC2/D8VnHr4wL4KQPLi
          flrk8RpAaCTwobmEB0BkIgxEsjD7PyCDmJLFIN8/hdpZGVeb5D9C0+TnwTnQPyZwvg4fG9k/oEET
          dR7A0D9XwMenXK0cQFqFZeg31vU/U9Y7wKeE8z/CLPboqdwVQCiUVKtrHRFA7x8q//vtCkBl+rkY
          lL/KP4rRHAPVEME/h0NiDYnrD0AXASF/sl0LQLlIkoUB/fE/Mi7+eIQd+D89ClS5b0UUQPAKF5ty
          wgNAZeNEOsWhGEChI+GXQs/9P9UKdWDtfQtALvUz3zgWHEC7F/9V7MQDQHQpop/TrB1A2C2MX89Z
          +D/w2fUUHu/8P7i0r6dY0BZAuuQ1i5wfEEACmofz5hsJQGeBQtS6qvA/PF6eD0SG3z/7a91RGGLk
          PyVDeZ/cVvU/CShDBlXv4T8ajM8x44PpPwYjsIgJMNs/dWyOSgQ42D/JSRw/mojWPw==
    walker/joints_vel_control: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 56
        - *id004
        - false
        - !!binary |
          wiYFhWsgdr8cm1ZT2Nlbv2Xsl1/+qFY/hBlsPoLFbL8mG8V8OThbP0EsELKKZmC/etRl+gp1876a
          0d7FnUcTP5Df+2G6snC/JZ4O3q8onb+HdLnORodtv7BPgARPZYY/WjVdQXTbQT+2NvWBFddOv0/1
          tY0QA1q/kZyplPRPg7+XQXl9NlFavzpPiQJIDFe/28J0sG1UUL/lwS5HRTOQP71TQAHJiGC/c4KS
          0zvtU7+WuC+Ymg9lPyt0uZGMpGI/bQsPuzivj78QpryNYxt9P+AVekuua5E/u6KjllrRdD+orqCr
          hgZzPxeKamfcsU6/CxBE6fT4dL/okL9lJdlQP00GehtIoRy/NgRvLpe2db8vsDdGqTeXv9pHhcxS
          nIA/BwDo3wGRhD+lrPl7hi9iP+T2DcpFeHe/NcYKmwS7dL+6GuPSWkmOP2Djy1tKd1M/WCNYm6GY
          JL/MQrYbDLiAP9e9KJBWv38/zRdhfiS4gj8+kPDtktlqv25lCqGbzVG/kSgo5Y5xSz+h4wHr7uFk
          vwBEyj5I3km/7kZeIkwacD87u71B2BVpP0KhrLvb+Yq/Te+KTyyySb849rUwU2VRvw==
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 56
        - *id004
        - false
        - !!binary |
          0ISxxH6W5D/+bqZ9WKfkPxT/9CuGueQ/NRUozz2cvT8OZXwSKbCzP+kgGNCpYQVASC9I6ZEe/T/i
          fCWqXVrpP3qjZj3gF/Q/bJ1pM9dECkAkuNbm7AIAQCsncz9RaA9ANsMziOQn9T8uGXRqydQFQJ/H
          LeYkXwdAlNdJwoMyAUCx6YoGtdjnP3Q8ZzJg4dA/WnNcS4U/1z9pJHHssozHP3pbQuJdVtA/aZYD
          0BEDyD8Xjvi4+EkQQNKkt7r1CvI/n1vpm6Zm8D/Jiii7zywUQAroqX+TvwlANprpzU5vB0Btwos0
          IgW/P52GHDR8pLQ/iDjl9VSWBUAa6MKuKxT+P6y1jS59mOk/qy5PUf639D/0Jnh3AfoLQNTyrT8T
          4Pw/zHizK5cGEEAnHHoct3/1Pw70Yf21LQZAsCMCGvkRCUBMblpLKWP9P5qnq7S9VRFAThWdZ8RW
          9D8WIINBu3T2P0X8XmNZABVAwthDtX8MCUDLZNirwIsGQDb33MpqWuM/ApKa8NOi0z+8emo/A1/Z
          P/grMjFzBOU/5laT+g7C1D99jhl9MbrbP+BNT8uJPtU/zA0Yto0X0T9/Cj6eyLLOPw==
    walker/orientation: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 9
        - *id004
        - false
        - !!binary |
          JEGblrlH3z8x5SPGyNpcP96d51caRXO/aOaVbvlTd7/9NLk8nVKov+aFGMKyw96/JEnqvQDZbb/h
          6fgUGFnvP7gs8+WeVbW/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 9
        - *id004
        - false
        - !!binary |
          2gD/iFBG4T/+4EGkkk2FP67Uigx4/co/Uj5Fx3tZyz/2/XfOPQSXP7oxAVvV+eA/mjSjmgwFfz+A
          a+0fJ0Z1P6B4FRIRGpU/
    walker/position: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          p4wRbrvofD9sxhhr9cDovyq/rU2UTPE/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          CqhFUVn61D8iSQ/jeoz6PwA3NcEqa3U/
    walker/reference_appendages_pos: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 75
        - *id004
        - false
        - !!binary |
          417GMi2D1b+bZdoVFybPP1tGST3XCK0/Dwy1hPzX0T8DCcKVxN/NP9x8L6bnqaY/rZY5KdE0wb9A
          NX1o8/rvv6ZhkpTZeqc/sqPzZnwnwj8YpaH1Vhzwv5+vqPNkLas/u+hQhtjmZD/Z377/5MPkP3VO
          N2/SNK4/Emz7BfiC1b+mBU9UdSXPP32CjCuuBq0/f4jEfQ7Y0T8Vu///td7NP59PTbVbpqY/sSms
          uJ00wb/waDDHAvvvv+Fz0vMZfac/hQuHNnUnwj8t50mUVxzwv+enzqVSJqs/jpw6Be0AZT/Xy6IM
          38PkP5exaQo8Na4/7Y45S8mC1b8d8Ays1iTPP5r3Q+M2BK0/W08dkCPY0T+Ut4aDqt3NP3voMHyY
          oqY/+PIYSi40wb+juo0SG/vvv4nEDlEWfqc/NT86lYQnwj/Y6DYTWBzwv/CHpEKFH6s/H0iaaSEX
          ZT/sA72x3MPkP+T00RVjNa4/cqQPmZaC1b8TU6DINSTPP3RZBqg0Aa0/eeE1+zvY0T87KQnOm9zN
          P+tAWSPVnqY/QTvcd4Uzwb9S7kBxKvvvv1PN3N3yfac/EhXoHZ4nwj/Dq1XxWBzwv6BG9vStGKs/
          SZsQ0pgrZT8BQZ7T28PkP9HLDOdpNa4/djK7q2GC1b9i0vBSnSPPPychCXW4/aw/AK9CCVPY0T8f
          KveXftvNP2b9DYovm6Y/wNt9yL0ywb+DqR4LPPvvv7R18pZTfac/coEVWL4nwj9EM4AsWxzwv8ce
          WCm4Eas/Vt9Cr0ZCZT8ru2AX2sPkP0sNVU9XNa4/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 75
        - *id004
        - false
        - !!binary |
          MKG/JalAeT+I4+RoO+WOPxTiOa2SNZc/cJ1QFWw5fj/0SbQL91yHP0dk1BbfPZM/ElCVmI8kkD9A
          4sDadteBP5GGHHhAAKY/yuDZqsktiz8AfUWSUpaAPzgBLobzvqU/KGY+GStTcD8ATCksKlNRP9eX
          IsXPbI8/EHDo2Xw/eT/cYrtjbeSOP72tIhDMMpc/QF7zQ304fj8MC4V9OFaHP570GTADPJM/755I
          u0wkkD/A7nN2SNeBPyFj4lVqAqY/WBGRpOgriz8ASx4SgZaAPx2z9JZYwKU/WgCJji5UcD8AadmZ
          FFdRPyDxjwALbY8/cLYbEb49eT9kw5dCeeOOPyWW6ucGMJc/cI2d8hM3fj8470fUPU+HPzDU8twB
          OpM/DwV+4TEkkD+AW0G54dOBP+1fpicMBaY/YEVMMxsqiz+ABfGciZmAPwrhplS/waU/pfQppMlU
          cD8ARmsgXldRP56fiLkhbY8/gNg1gXA7eT+sejD8x+KOPwRCu9tbLZc/wAw7t981fj+UyvPz5EeH
          P28o+/SmN5M/8Uw+cFMkkD9ARq4G09OBP7oIy0gPCKY/Dh/DBaIoiz8ArA7xl5mAP7djzv8fw6U/
          fIEvHH5VcD8Av99aYVhRPzGQGzIIbY8/gFoqOmk4eT/Y6/m19uGOPz9WhQe5Kpc/gMoEzwE1fj9k
          utjglUCHP0ut6YPzNJM/KcoVs2kkkD8ANpWk2NGBPxiy+VPrCqY/+jmNOpwniz+AEBN35ZiAP5uJ
          2ghsxKU/wpjxfZFWcD8A6v1rqVlRP12gvAqwbI8/
    walker/reference_ego_bodies_quats: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 620
        - *id004
        - false
        - !!binary |
          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
          Pw==
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 620
        - *id004
        - false
        - !!binary |
          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
          Pw==
    walker/reference_rel_bodies_pos_global: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 465
        - *id004
        - false
        - !!binary |
          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
          oYhI4IqUv3TG6IZtbIq/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 465
        - *id004
        - false
        - !!binary |
          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
          gW/w6wejP2Jj1JSBIoI/
    walker/reference_rel_bodies_pos_local: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 465
        - *id004
        - false
        - !!binary |
          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
          CeNt6iOHv66xI7S2Rac/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 465
        - *id004
        - false
        - !!binary |
          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
          JqEWzm2FP630VXDrdqI/
    walker/reference_rel_bodies_quats: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 620
        - *id004
        - false
        - !!binary |
          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
          vw==
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 620
        - *id004
        - false
        - !!binary |
          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
          Pw==
    walker/reference_rel_joints: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 280
        - *id004
        - false
        - !!binary |
          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
          P2u2uguAd0K/QcFQVU3McT8=
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 280
        - *id004
        - false
        - !!binary |
          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
          P5KJm78h14k/aL8pECg5hj8=
    walker/reference_rel_root_pos_local: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 15
        - *id004
        - false
        - !!binary |
          f2VZyAItaz8F9gIid0Rxv6iLXCv5v5E/em4PDSeFbD8xi4EBZgdsv6DHq+6eB5o/9TzTCAH8bT+j
          CS9BQztlvy+G/aizLqE/NZCDUx6Rbz980MO2Olxcv+WUyRahX6U/W3sytnqicD/uy+lzV6VLv6nP
          j72Wlak/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 15
        - *id004
        - false
        - !!binary |
          SEynh9zSlT8pwwkThjtaP7pAAtMZf5A/epC7LMxQlj/bLWLmM2RcP8I6CwWyVpE/qxbbSdLolj8S
          Nfh+3gZgPxPg0UZYwZI/UHGpz/GZlz9cUxB3ao1iP09PJo69vZQ/l4BJcERjmD+kPXk8PLJlP3gD
          2q45Spc/
    walker/reference_rel_root_quat: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 20
        - *id004
        - false
        - !!binary |
          hWo3Cgyb6T8yifuFGtZtv5RDEujAf2o/Uufj1TE9VD+2stSrY4bpP6lbvRQF4m2/uLaqe8ofbz9V
          u3/lbFdTP9tOsPMVcek/m6PlFlP2bb+EHBlQd9xxP1ChlkneXlI/xo16QRRb6T/jMBJfoxVuv8Jb
          6BtWIHQ/UTkJm7VTUT8iEHRkoUTpP7gmK4qtQm6/ZKMDaIhfdj+UnJ3XeDlQPw==
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 20
        - *id004
        - false
        - !!binary |
          SAB7HyB71j8LAUd77cNKP/qenuobuXw/dqtTpEmTQz8Oa6b4wK/WP3jDsargFkw/ptnYmQmmfz/R
          /49bvYFFPz4tNGW13tY/QgIxMCM9Tj+8UIVGLxiCP9kjHwZetEg/As2H/+II1z9kId6c9IdQP9tq
          Hug9G4U/8QUuq9DqTD/WZoMJNy7XP6Z7F35eNFI/KcVR/rfIiD+EIklVtfRQPw==
    walker/sensors_accelerometer: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          mRBjRcpEo78eck4DkDgjQHSDuHPUQ+y/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          sI06WcDOQUBAVefJ/DM3QLTylQRlMVdA
    walker/sensors_gyro: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          VQRIH+dolb9K7wNt8V2pP+eD9T+38m+/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          gseBTJK99T/i8+bJL+77P6QaExCoreE/
    walker/sensors_torque: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 6
        - *id004
        - false
        - !!binary |
          eKwyePN8g78t+a4Oq3Z8P0Z0//KM8aw/mWgVY86fhz8X4MgMdOSGv6v2Hh5cg7E/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 6
        - *id004
        - false
        - !!binary |
          AnnneGMoyD/hHcyzgBySP7/fP0uiucI/4VvAtzdxxD9ryYugOFeOP6oi6uERG7s/
    walker/sensors_touch: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 10
        - *id004
        - false
        - !!binary |
          uE5yYmunHz9iZdKvkrwHP3ucQUsNhP0+YZUa66ErIj8TEnb4vLwGPyDK4mP08eg+Qoht/JN94z84
          uIncUcriPzbCb6BUq9I/3OFTL8EP2j8=
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 10
        - *id004
        - false
        - !!binary |
          7YYS5HCmHz+f+SlCTLwHP0iQT9jWg/0+0CcA1vwqIj98+AFZfLwGP+HDzvHg8eg+Fv9rxx16zj9o
          T3Ro2gbPPxRSD7tUcso/5dIUsODlzj8=
    walker/sensors_velocimeter: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          5rCe5LQ6+b7INlG9+LacP2n/TNQ3B9E/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          TysumggDsz8iDnAnA9KvPwZMf+vIwtU/
    walker/time_in_clip: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          IQG/oc8v4T8=
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          1E6C7LaJsz8=
    walker/torso_xvel: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          gNaufVLRXr8=
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          apyGNlq9uj8=
    walker/torso_yvel: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          H/1K1adnvL8=
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          cvP4r1iv1T8=
    walker/veloc_forward: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          5rCe5LQ6+b4=
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          TysumggDsz8=
    walker/veloc_strafe: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          yDZRvfi2nD8=
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          Ig5wJwPSrz8=
    walker/veloc_up: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          af9M1DcH0T8=
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - !!binary |
          Bkx/68jC1T8=
    walker/velocimeter_control: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          H3+80seFND9m7eGHkhidPyMaw2Sc+tA/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          Gsl74xxPsj+6bPNfICevPzg9Y1BEVNU/
    walker/world_zaxis: !!python/object:stable_baselines3.common.running_mean_std.RunningMeanStd
      count: *id005
      mean: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          JEnqvQDZbb/h6fgUGFnvP7gs8+WeVbW/
      var: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 3
        - *id004
        - false
        - !!binary |
          mjSjmgwFfz+Aa+0fJ0Z1P6B4FRIRGpU/
  observable_keys: &id006 !!python/tuple
  - walker/joints_pos
  - walker/joints_vel
  - walker/sensors_velocimeter
  - walker/sensors_gyro
  - walker/end_effectors_pos
  - walker/world_zaxis
  - walker/actuator_activation
  - walker/sensors_touch
  - walker/sensors_torque
  - walker/body_height
  - walker/reference_rel_bodies_pos_local
  - walker/reference_rel_bodies_quats
layer_size: 1024
learning_rate: 0.0005
n_layers: 1
observables: *id006
observation_space: !!python/object:gym.spaces.dict.Dict
  _np_random: null
  _shape: null
  dtype: null
  spaces: !!python/object/apply:collections.OrderedDict
  - - - walker/actuator_activation
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 56
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8=
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8=
    - - walker/appendages_pos
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 15
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 15
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 15
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 15
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 15
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/
    - - walker/body_height
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 1
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACAfw==
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACA/w==
    - - walker/end_effectors_pos
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 12
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 12
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 12
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 12
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 12
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
    - - walker/gyro_anticlockwise_spin
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 1
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACAfw==
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACA/w==
    - - walker/gyro_backward_roll
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 1
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACAfw==
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACA/w==
    - - walker/gyro_control
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 3
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/
    - - walker/gyro_rightward_roll
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 1
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACAfw==
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACA/w==
    - - walker/head_height
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 1
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACAfw==
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACA/w==
    - - walker/joints_pos
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 56
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8=
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8=
    - - walker/joints_vel
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 56
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8=
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8=
    - - walker/joints_vel_control
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 56
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8=
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 56
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8=
    - - walker/orientation
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 9
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 9
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 9
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 9
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 9
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
    - - walker/position
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 3
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/
    - - walker/reference_appendages_pos
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 75
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 75
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 75
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 75
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 75
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/
    - - walker/reference_ego_bodies_quats
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 620
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 620
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 620
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 620
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8=
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 620
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8=
    - - walker/reference_rel_bodies_pos_global
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 465
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 465
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 465
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 465
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 465
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
    - - walker/reference_rel_bodies_pos_local
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 465
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 465
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 465
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 465
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 465
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
    - - walker/reference_rel_bodies_quats
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 620
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 620
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 620
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 620
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8=
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 620
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8=
    - - walker/reference_rel_joints
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 280
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 280
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 280
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 280
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAA
            gH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACA
            fwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfw==
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 280
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAA
            gP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA
            /wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/w==
    - - walker/reference_rel_root_pos_local
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 15
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 15
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 15
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 15
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 15
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/
    - - walker/reference_rel_root_quat
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 20
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 20
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAA=
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 20
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAA=
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 20
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8A
            AIB/AACAfwAAgH8AAIB/AACAfwAAgH8=
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 20
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8A
            AID/AACA/wAAgP8AAID/AACA/wAAgP8=
    - - walker/sensors_accelerometer
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 3
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/
    - - walker/sensors_gyro
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 3
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/
    - - walker/sensors_torque
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 6
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 6
          - *id002
          - false
          - !!binary |
            AAAAAAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 6
          - *id002
          - false
          - !!binary |
            AAAAAAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 6
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 6
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/
    - - walker/sensors_touch
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 10
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 10
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAA==
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 10
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAA==
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 10
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfw==
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 10
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/w==
    - - walker/sensors_velocimeter
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 3
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/
    - - walker/time_in_clip
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 1
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACAfw==
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACA/w==
    - - walker/torso_xvel
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 1
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACAfw==
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACA/w==
    - - walker/torso_yvel
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 1
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACAfw==
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACA/w==
    - - walker/veloc_forward
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 1
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACAfw==
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACA/w==
    - - walker/veloc_strafe
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 1
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACAfw==
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACA/w==
    - - walker/veloc_up
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 1
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id002
          - false
          - !!binary |
            AA==
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACAfw==
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 1
          - *id003
          - false
          - !!binary |
            AACA/w==
    - - walker/velocimeter_control
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 3
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/
    - - walker/world_zaxis
      - !!python/object:gym.spaces.box.Box
        _np_random: null
        _shape: !!python/tuple
        - 3
        bounded_above: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        bounded_below: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id002
          - false
          - !!binary |
            AAAA
        dtype: *id007
        high: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACAfwAAgH8AAIB/
        low: !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 3
          - *id003
          - false
          - !!binary |
            AACA/wAAgP8AAID/
optimizer_class: !!python/name:torch.optim.adam.Adam ''
optimizer_kwargs: null
optimizer_scheduler_class: null
optimizer_scheduler_kwargs: null
ref_steps: !!python/object/apply:numpy.core.multiarray._reconstruct
  args:
  - *id001
  - !!python/tuple
    - 0
  - !!binary |
    Yg==
  state: !!python/tuple
  - 1
  - !!python/tuple
    - 5
  - *id008
  - false
  - !!binary |
    AQAAAAAAAAACAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAFAAAAAAAAAA==
squash_output: true
std_dev: 0.1
